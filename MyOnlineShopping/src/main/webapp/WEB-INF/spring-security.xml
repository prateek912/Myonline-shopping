<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
   		http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- To allow our static resources url like css js to load -->
	<http pattern="/resources/**" security="none" />

	<http>
		<!-- To make sure user can access login page whether they have roles or 
			not -->
		<intercept-url pattern="/login" access="permitAll" />

		<!-- Only Admin access -->
		<intercept-url pattern="/manage/**"
			access="hasAuthority('ADMIN')" />

		<!-- Registered User access -->
		<intercept-url pattern="/cart/**"
			access="hasAuthority('USER')" />

		<!-- For everyone -->
		<intercept-url pattern="/**" access="permitAll" />

		<form-login login-page="/login" username-parameter="email" />

		<!-- Access denied handler page -->
		<access-denied-handler error-page="/access-denied" />
		<logout />
	</http>

	<!-- For Scanning Dependency of BackEnd Project -->
	<context:component-scan
		base-package="com.spring.backend" />

	<authentication-manager>
		<authentication-provider>
		<password-encoder ref="passwordEncoder" hash="bcrypt"/>
			<!-- Checking Email and Password from Database -->
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select email,password,enabled from user_detail where email = ?"
				authorities-by-username-query="select email,role from user_detail where email = ?" />

		</authentication-provider>
	</authentication-manager>

	<!-- Bean for Password Encoding -->
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
</beans:beans>